version: '3.8'
services:
  pokemon-service:
    container_name: pokemon-service
    image: ghcr.io/teunbuis-semester6-pogokwetter/pokemon-service:latest
    pull_policy: "always"
#    build:
#      context: ./
#      dockerfile: Dockerfile
    networks:
      - spring-net
    restart: "no"
    depends_on:
      - pokemonimg-mysql
      - rabbit-MQ
      - redis
    ports:
      - "8080:8080"


  pokemonimg-mysql:
    container_name: pokemonimg-mysql
    image: mysql:latest
    ports:
      - "3307:3307"
    networks:
      - spring-net
    environment:
      - MYSQL_ROOT_PASSWORD=Teun
      - MYSQL_DATABASE=pokemonimg
      - MYSQL_TCP_PORT=3307
    volumes:
      - pokemondata:/var/lib/mysql
      - pokemondata:/etc/mysql/conf.d

  rabbit-MQ:
    container_name: rabbit-MQ
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - spring-net
    restart: "no"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

  redis:
    container_name: pokemon-redis
    image: redis:alpine
    command: redis-server --requirepass Teun
    networks:
      - spring-net
    ports:
      - "6379:6379"
    volumes:
      - pokemonredis:/data

  redis-insight:
    container_name: redis-insight
    image: redislabs/redisinsight:latest
    ports:
      - "8001:8001"
    networks:
      - spring-net

networks:
  spring-net:
    name: spring-net
    driver: bridge

volumes:
  pokemondata:
  pokemonredis: