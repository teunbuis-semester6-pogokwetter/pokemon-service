plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.sonarqube" version "3.5.0.2730"}

group = 'com.teun'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.modelmapper:modelmapper:3.1.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:5.2.0'
}

sonarqube {
	properties {
		property "sonar.projectKey", "teunbuis-semester6-pogokwetter_pokemon-service"
		property "sonar.organization", "teunbuis-semester6-pogokwetter"
		property "sonar.host.url", "https://sonarcloud.io"
		property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
	}
}
jacoco{
	toolVersion = '0.8.7'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	useJUnitPlatform()
	jacoco {
		enabled = true
		destinationFile = file("$buildDir/jacoco/test.exec")
	}
}


jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.5
			}
		}

		rule {
			enabled = false
			element = 'CLASS'
			includes = ['org.gradle.*']

			limit {
				counter = 'LINE'
				value = 'TOTALCOUNT'
				maximum = 0.3
			}
		}
	}
}

